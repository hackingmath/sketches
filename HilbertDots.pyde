'''Cloning the Hilbert-Curve-following dots
https://twitter.com/pickover/status/1108183248516145152
March 20, 2019'''

SZ = 100
scl = 1.85
level = 0
ratio = 0.0
freeze = False
stop_val = 0

pointList = [(0,0),(20.00,0.00), (20.00,20.00), (0.00,20.00), 
             (0.00,40.00), (0.00,60.00), (20.00,60.00), 
             (20.00,40.00), (40.00,40.00), (40.00,60.00), 
             (60.00,60.00), (60.00,40.00), (60.00,20.00), 
             (40.00,20.00), (40.00,-0.00), (60.00,-0.00), 
             (80.00,-0.00), (80.00,20.00), (100.00,20.00), 
             (100.00,-0.00), (120.00,-0.00), (140.00,-0.00), 
             (140.00,20.00), (120.00,20.00), (120.00,40.00), 
             (140.00,40.00), (140.00,60.00), (120.00,60.00), 
             (100.00,60.00), (100.00,40.00), (80.00,40.00), 
             (80.00,60.00), (80.00,80.00), (80.00,100.00), 
             (100.00,100.00), (100.00,80.00), (120.00,80.00), 
             (140.00,80.00), (140.00,100.00), (120.00,100.00), 
             (120.00,120.00), (140.00,120.00), (140.00,140.00), 
             (120.00,140.00), (100.00,140.00), (100.00,120.00), 
             (80.00,120.00), (80.00,140.00), (60.00,140.00), 
             (40.00,140.00), (40.00,120.00), (60.00,120.00), 
             (60.00,100.00), (60.00,80.00), (40.00,80.00), 
             (40.00,100.00), (20.00,100.00), (20.00,80.00), 
             (-0.00,80.00), (-0.00,100.00), (-0.00,120.00), 
             (20.00,120.00), (20.00,140.00), (-0.00,140.00),
              (-0.00,160.00), (-0.00,180.00), (20.00,180.00), 
              (20.00,160.00), (40.00,160.00), (60.00,160.00), 
              (60.00,180.00), (40.00,180.00), (40.00,200.00), 
              (60.00,200.00), (60.00,220.00), (40.00,220.00), 
              (20.00,220.00), (20.00,200.00), (-0.00,200.00), 
              (-0.00,220.00), (-0.00,240.00), (20.00,240.00), 
              (20.00,260.00), (-0.00,260.00), (-0.00,280.00), 
              (-0.00,300.00), (20.00,300.00), (20.00,280.00), 
              (40.00,280.00), (40.00,300.00), (60.00,300.00), 
              (60.00,280.00), (60.00,260.00), (40.00,260.00), 
              (40.00,240.00), (60.00,240.00), (80.00,240.00), 
              (100.00,240.00), (100.00,260.00), (80.00,260.00), 
              (80.00,280.00), (80.00,300.00), (100.00,300.00), 
              (100.00,280.00), (120.00,280.00), (120.00,300.00), 
              (140.00,300.00), (140.00,280.00), (140.00,260.00), 
              (120.00,260.00), (120.00,240.00), (140.00,240.00), 
              (140.00,220.00), (140.00,200.00), (120.00,200.00), 
              (120.00,220.00), (100.00,220.00), (80.00,220.00), 
              (80.00,200.00), (100.00,200.00), (100.00,180.00), 
              (80.00,180.00), (80.00,160.00), (100.00,160.00), 
              (120.00,160.00), (120.00,180.00), (140.00,180.00), 
              (140.00,160.00), (160.00,160.00), (160.00,180.00), 
              (180.00,180.00), (180.00,160.00), (200.00,160.00), 
              (220.00,160.00), (220.00,180.00), (200.00,180.00), 
              (200.00,200.00), (220.00,200.00), (220.00,220.00), 
              (200.00,220.00), (180.00,220.00), (180.00,200.00), 
              (160.00,200.00), (160.00,220.00), (160.00,240.00), 
              (180.00,240.00), (180.00,260.00), (160.00,260.00), 
              (160.00,280.00), (160.00,300.00), (180.00,300.00), 
              (180.00,280.00), (200.00,280.00), (200.00,300.00),
              (220.00,300.00), (220.00,280.00), (220.00,260.00), 
              (200.00,260.00), (200.00,240.00), (220.00,240.00), 
              (240.00,240.00), (260.00,240.00), (260.00,260.00), 
              (240.00,260.00), (240.00,280.00), (240.00,300.00), 
              (260.00,300.00), (260.00,280.00), (280.00,280.00), 
              (280.00,300.00), (300.00,300.00), (300.00,280.00), 
              (300.00,260.00), (280.00,260.00), (280.00,240.00), 
              (300.00,240.00), (300.00,220.00), (300.00,200.00), 
              (280.00,200.00), (280.00,220.00), (260.00,220.00), 
              (240.00,220.00), (240.00,200.00), (260.00,200.00), 
              (260.00,180.00), (240.00,180.00), (240.00,160.00), 
              (260.00,160.00), (280.00,160.00), (280.00,180.00), 
              (300.00,180.00), (300.00,160.00), (300.00,140.00), 
              (280.00,140.00), (280.00,120.00), (300.00,120.00), 
              (300.00,100.00), (300.00,80.00), (280.00,80.00), 
              (280.00,100.00), (260.00,100.00), (260.00,80.00), 
              (240.00,80.00), (240.00,100.00), (240.00,120.00), 
              (260.00,120.00), (260.00,140.00), (240.00,140.00), 
              (220.00,140.00), (220.00,120.00), (200.00,120.00), 
              (200.00,140.00), (180.00,140.00), (160.00,140.00), 
              (160.00,120.00), (180.00,120.00), (180.00,100.00), 
              (160.00,100.00), (160.00,80.00), (180.00,80.00), 
              (200.00,80.00), (200.00,100.00), (220.00,100.00), 
              (220.00,80.00), (220.00,60.00), (220.00,40.00), 
              (200.00,40.00), (200.00,60.00), (180.00,60.00), 
              (160.00,60.00), (160.00,40.00), (180.00,40.00), 
              (180.00,20.00), (160.00,20.00), (160.00,-0.00), 
              (180.00,-0.00), (200.00,-0.00), (200.00,20.00), 
              (220.00,20.00), (220.00,-0.00), (240.00,-0.00), 
              (260.00,-0.00), (260.00,20.00), (240.00,20.00), 
              (240.00,40.00), (240.00,60.00), (260.00,60.00), 
              (260.00,40.00), (280.00,40.00), (280.00,60.00), 
              (300.00,60.00), (300.00,40.00), (300.00,20.00), 
              (280.00,20.00), (280.00,-0.00), (300.00,-0.00)]

def setup():
    size(600,600)
    colorMode(HSB)
    
def draw():
    global level, pointList, ratio, freeze,stop_val
    frameRate(10)
    background(0)
    translate(20,20)
    hilbert(level % len(pointList),ratio)
    level += 1
    if not freeze:
        ratio += 0.05
    if ratio >= 1:
        ratio = 0 
        freeze = True
        stop_val = frameCount
    if frameCount == stop_val + 5:
        freeze = False
        noLoop()
    saveFrame('####.png')
    
def hilbert(level,ratio):
    '''Draws the Hilbert Curve'''
    for i in range(len(pointList)):
        
        fill(lerp(128+105*sin(5*radians((level+i)%len(pointList))),
                  128+105*sin(5*radians((level+i+1)%len(pointList))),ratio),255,255)
        x = lerp(pointList[(level+i)%len(pointList)][0]*scl,
                pointList[(level+i+1)%len(pointList)][0]*scl,ratio)
        y = lerp(pointList[(level+i)%len(pointList)][1]*scl,
                 pointList[(level+i+1)%len(pointList)][1]*scl,ratio)
        if (level+i)%len(pointList) == len(pointList)-1:
            x=lerp(pointList[(level+i)%len(pointList)][0]*scl,width,ratio)
        ellipse(x,y,20,20)
        fill(128,255,255)
        ellipse(lerp(-20*1.8,pointList[0][0]*scl,ratio),pointList[0][1],20,20)
        
